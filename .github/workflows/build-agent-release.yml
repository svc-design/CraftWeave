name: Build and Release CraftWeave Agent

on:
  pull_request:
    paths:
      - 'CraftWeaveAgent/**'
      - '.github/workflows/build-agent-release.yml'
  push:
    paths:
      - 'CraftWeaveAgent/**'
      - '.github/workflows/build-agent-release.yml'
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  build-linux:
    name: Build cw-agent binaries (Linux)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        working-directory: CraftWeaveAgent
        run: |
          mkdir -p dist
          cargo build --release --target ${{ matrix.target }}
          cp target/${{ matrix.target }}/release/cw-agent dist/cw-agent-${{ matrix.target }}

      - name: Compress and checksum
        working-directory: CraftWeaveAgent/dist
        run: |
          tar -czvf cw-agent-${{ matrix.target }}.tar.gz cw-agent-${{ matrix.target }}
          sha256sum cw-agent-${{ matrix.target }}.tar.gz > cw-agent-${{ matrix.target }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cw-agent-${{ matrix.target }}
          path: |
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.tar.gz
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.sha256

  build-macos:
    name: Build cw-agent binaries (macOS)
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        working-directory: CraftWeaveAgent
        run: |
          mkdir -p dist
          cargo build --release --target ${{ matrix.target }}
          cp target/${{ matrix.target }}/release/cw-agent dist/cw-agent-${{ matrix.target }}

      - name: Compress and checksum
        working-directory: CraftWeaveAgent/dist
        run: |
          tar -czvf cw-agent-${{ matrix.target }}.tar.gz cw-agent-${{ matrix.target }}
          shasum -a 256 cw-agent-${{ matrix.target }}.tar.gz > cw-agent-${{ matrix.target }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cw-agent-${{ matrix.target }}
          path: |
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.tar.gz
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.sha256

  build-windows:
    name: Build cw-agent binaries (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        working-directory: CraftWeaveAgent
        run: |
          mkdir dist
          cargo build --release --target ${{ matrix.target }}
          copy target\${{ matrix.target }}\release\cw-agent.exe dist\cw-agent-${{ matrix.target }}.exe

      - name: Compress and checksum
        working-directory: CraftWeaveAgent\dist
        run: |
          Compress-Archive -Path cw-agent-${{ matrix.target }}.exe -DestinationPath cw-agent-${{ matrix.target }}.zip
          Get-FileHash cw-agent-${{ matrix.target }}.zip -Algorithm SHA256 | ForEach-Object { "$($_.Hash)  cw-agent-${{ matrix.target }}.zip" } | Out-File -Encoding ASCII -FilePath cw-agent-${{ matrix.target }}.sha256
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cw-agent-${{ matrix.target }}
          path: |
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.zip
            CraftWeaveAgent/dist/cw-agent-${{ matrix.target }}.sha256

  test:
    name: Test Rust Agent (Linux only)
    needs: build-linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Run cargo test
        working-directory: CraftWeaveAgent
        run: cargo test

  publish-release:
    name: Publish Daily Release
    needs: [build-linux, build-macos, build-windows, test]
    runs-on: ubuntu-latest
    env:
      tag_name: daily-agent-${{ github.run_id }}
      release_name: Daily Build cw-agent - ${{ github.run_number }}

    steps:
      - uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag_name }}
          name: ${{ env.release_name }}
          prerelease: true
          files: |
            release-artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
