name: Build Offline Nginx Ingress Installer

on:
  push:
    paths:
      - 'scripts/ingress-installer.sh'
      - '.github/workflows/build-offline-package.yaml'
  workflow_dispatch:

jobs:
  build-offline-installer:
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.upload-artifact.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v4

      - name: Prepare directories
        run: |
          mkdir -p offline-installer/{images,charts,scripts,bin}

      - name: Download nerdctl binary for ${{ matrix.arch }}
        run: |
          wget https://github.com/containerd/nerdctl/releases/download/v2.0.3/nerdctl-2.0.3-linux-${{ matrix.arch }}.tar.gz \
            -O offline-installer/nerdctl.tar.gz

      - name: Pull & export required images
        run: |
          docker pull nginx/nginx-ingress:2.4.0
          docker pull registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407

          docker save nginx/nginx-ingress:2.4.0 \
            -o offline-installer/images/nginx-ingress.tar

          docker save registry.k8s.io/ingress-nginx/kube-webhook-certgen:v20230407 \
            -o offline-installer/images/kube-webhook-certgen.tar

      - name: Download Helm Chart (nginx-stable/nginx-ingress v0.15.0)
        run: |
          helm repo add nginx-stable https://helm.nginx.com/stable
          helm repo update
          helm pull nginx-stable/nginx-ingress --version=0.15.0 --untar --untardir offline-installer/charts

      - name: Copy installer script
        run: |
          cp scripts/ingress-installer.sh offline-installer/scripts/
          chmod +x offline-installer/scripts/ingress-installer.sh

      - name: Package offline installer
        run: |
          cd offline-installer
          tar czvf ../offline-setup-nginx-ingress-${{ matrix.arch }}.tar.gz ./
          cd ..

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: offline-setup-nginx-ingress-${{ matrix.arch }}
          path: offline-setup-nginx-ingress-${{ matrix.arch }}.tar.gz

  test-offline-installer:
    needs: build-offline-installer
    strategy:
      matrix:
        arch: [amd64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download offline installer artifact for ${{ matrix.arch }}
        uses: actions/download-artifact@v4
        with:
          name: offline-setup-nginx-ingress-${{ matrix.arch }}
          path: offline-test

      - name: Setup Kind cluster
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.20.0

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Load offline installer package
        run: |
          cd offline-test
          tar -xzvf offline-setup-nginx-ingress-${{ matrix.arch }}.tar.gz
          # 导入 nerdctl binary 到 /usr/local/bin（需要 sudo 权限，若 GitHub Action runner 无法使用 sudo，可跳过此步骤模拟安装）
          sudo tar xzvf nerdctl.tar.gz -C /usr/local/bin/
          # 导入镜像
          docker load -i images/nginx-ingress.tar
          docker load -i images/kube-webhook-certgen.tar
          cd ..

      - name: Run offline installer in Kind cluster
        run: |
          # 使用 Kind 集群上下文，执行离线安装脚本
          cd offline-test
          # 这里假设使用默认 IP（Kind集群节点IP），可自定义传入参数
          export KUBECONFIG="${HOME}/.kube/config"
          kubectl get nodes
          sudo bash scripts/ingress-installer.sh
          sleep 30
          kubectl -n ingress get pods

  publish-release:
    needs: test-offline-installer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download all offline installer artifacts
        uses: actions/download-artifact@v4
        with:
          name: offline-setup-nginx-ingress
          path: release-artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "offline-nginx-ingress-$(date +'%Y%m%d%H%M%S')"
          release_name: "Offline NGINX Ingress Installer"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-artifacts
          asset_name: offline-setup-nginx-ingress.tar.gz
          asset_content_type: application/gzip
